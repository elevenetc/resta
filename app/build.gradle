apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.elevenetc.android.resta"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        all {

            final foursquareProps = getProperties('foursquare.api.config')
            final googleServicesProps = getProperties('google.api.config')

            final fsClientId = foursquareProps.getProperty('client.id')
            final fsClientSecret = foursquareProps.getProperty('client.secret')
            final googleMapsKey = googleServicesProps.getProperty('maps.key')

            buildConfigField 'String', 'FS_CLIENT_ID', "\"$fsClientId\""
            buildConfigField 'String', 'FS_CLIENT_SECRET', "\"$fsClientSecret\""
            manifestPlaceholders = [google_map_key: googleMapsKey]
        }
    }
}

repositories {
    jcenter()
}

dependencies {

    final verDagger = '2.16'
    final verRetrofit = '2.4.0'
    final verOkHttpInterceptor = '3.10.0'
    final verRxJava = '2.1.11'
    final verRxAndroid = '2.1.1'
    final verAssertJ = '3.10.0'
    final verPlayServices = '17.0.0'
    final verMockito = '2.12.0'
    
    /**
     * Android
     */
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.core:core-ktx:1.2.0-alpha03'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5+'
    implementation 'com.google.android.material:material:1.0.0'

    /**
     * Architecture
     */
    implementation "com.google.dagger:dagger:$verDagger"
    kapt "com.google.dagger:dagger-compiler:$verDagger"

    /**
     * Network
     */
    implementation "com.squareup.retrofit2:retrofit:$verRetrofit"
    implementation "com.squareup.retrofit2:converter-gson:$verRetrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$verRetrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$verOkHttpInterceptor"

    /**
     * Utils
     */
    implementation "io.reactivex.rxjava2:rxjava:$verRxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$verRxAndroid"

    /**
     * Location
     */
    implementation "com.google.android.gms:play-services-location:$verPlayServices"

    /**
     * Testing
     */
    testImplementation "org.mockito:mockito-core:$verMockito"
    testImplementation "org.assertj:assertj-core:$verAssertJ"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}

def getProperties(name) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file(name).newDataInputStream())
    return properties
}